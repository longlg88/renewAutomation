CREATE TABLE EVENT_META (
     EVENT_ID                    VARCHAR(32)      NOT NULL,
     EVENT_STATUS                CHAR             NOT NULL,
     STATUS_CHANGER              VARCHAR(100)     ,
     STATUS_CHANGE_TIME          NUMBER(13)       ,
     RULE_NAME                   VARCHAR(100)     NOT NULL,
     EVENT_TYPE                  CHAR             NOT NULL,
     EVENT_MESSAGE               VARCHAR(256)     ,
     EVENT_LEVEL                 NUMBER(1)        NOT NULL,
     PUBLISHER_TYPE              VARCHAR(100)     NOT NULL,
     TENANT_ID                   VARCHAR(100)     ,
     PROJECT_ID                  VARCHAR(100)     ,
     SOURCE_CI_TYPE              VARCHAR(100)     NOT NULL,
     SOURCE_CI_ID                VARCHAR(100)     NOT NULL,
     CREATE_TIME                 NUMBER(13)       ,
     PARENT_EVENT_ID             VARCHAR(32)      ,
    CONSTRAINT EVENT_META_PK PRIMARY KEY (EVENT_ID),
    CONSTRAINT EVENT_META_FK FOREIGN KEY (PARENT_EVENT_ID) REFERENCES EVENT_META (EVENT_ID) ON DELETE SET NULL
);


CREATE TABLE EVENT_DETAIL (
     EVENT_ID                    VARCHAR(32)       NOT NULL,
     FIELD_NAME                  VARCHAR(50)       NOT NULL,
     FIELD_VALUE                 VARCHAR(200)      NOT NULL,
     CONSTRAINT EVENT_DETAIL_PK PRIMARY KEY (EVENT_ID, FIELD_NAME),
     CONSTRAINT EVENT_DETAIL_FK FOREIGN KEY (EVENT_ID) REFERENCES EVENT_META (EVENT_ID) ON DELETE CASCADE
);

CREATE TABLE STATE
(
	STATE_ID			VARCHAR(32)	NOT NULL,
	STATE_NAME			VARCHAR(100) UNIQUE	NOT NULL,
	DESCRIPTION			VARCHAR(65500),
	CONSTRAINT PK_STATE	PRIMARY KEY(STATE_ID)
)
;
CREATE TABLE STEP_ROLE
(
	STEP_ID			VARCHAR(32) NOT NULL,
	ROLE_ID			VARCHAR(32) NOT NULL,
	CONSTRAINT PK_STEP_ROLE	PRIMARY KEY(STEP_ID, ROLE_ID)
)
;
CREATE TABLE STATE_MACHINE
(
	STATE_MACHINE_ID			VARCHAR(32)	NOT NULL,
	STATE_MACHINE_NAME			VARCHAR(100) UNIQUE	NOT NULL,
	DESCRIPTION				VARCHAR(65500),
	CONSTRAINT PK_STATE_MACHINE	PRIMARY KEY(STATE_MACHINE_ID)
)
;
CREATE TABLE STEP
(
	STEP_ID				VARCHAR(32) NOT NULL,
	CURRENT_STATE_ID		VARCHAR(32) NOT NULL,
	NEXT_STATE_ID			VARCHAR(32) NOT NULL,
	CONSTRAINT PK_STEP	PRIMARY KEY(STEP_ID)
)
;
CREATE TABLE STATE_MACHINE_STEPS
(
	STATE_MACHINE_ID	VARCHAR(32) NOT NULL,
	STEP_ID			VARCHAR(32) NOT NULL,
	CONSTRAINT PK_STATE_MACHINE_STEPS	PRIMARY KEY(STATE_MACHINE_ID, STEP_ID)
)
;
CREATE TABLE STATE_MACHINE_ROLE
(
	STATE_MACHINE_ID			VARCHAR(32)	NOT NULL,
	ROLE_ID					VARCHAR(32)	NOT NULL,
	CONSTRAINT PK_STATE_MACHINE_ROLE	PRIMARY KEY(STATE_MACHINE_ID, ROLE_ID)
)
;
CREATE TABLE TICKET_TYPE
(
	TICKET_TYPE_ID				VARCHAR(32)	NOT NULL,
	TICKET_TYPE_NAME			VARCHAR(100)UNIQUE	NOT NULL,
	STATE_MACHINE_ID			VARCHAR(32)	NOT NULL,
	DESCRIPTION					VARCHAR(65500),
	CONSTRAINT PK_TICKET_TYPE	PRIMARY KEY(TICKET_TYPE_ID)
)
;
CREATE TABLE PRIORITY
(
	PRIORITY_ID			VARCHAR(32)	NOT NULL,
	PRIORITY_NAME		VARCHAR(100)UNIQUE	NOT NULL,
	PRIORITY_LEVEL			NUMBER,
	PRIORITY_NEED_DATE		NUMBER,
	DESCRIPTION			VARCHAR(65500),
	CONSTRAINT PK_PRIORITY	PRIMARY KEY(PRIORITY_ID)
)
;
CREATE TABLE TICKET
(
	TICKET_ID			NUMBER		NOT NULL,
	TICKET_TITLE		VARCHAR(100)UNIQUE	NOT NULL,
	TICKET_TYPE_ID		VARCHAR(32),
	CREATOR_USER_ID		VARCHAR(32),
	PRIORITY_ID			VARCHAR(32),
	STATE_ID			VARCHAR(32),
	DESCRIPTION			VARCHAR(65500),
	CREATE_TIME			TIMESTAMP,
	DUE_DATE			TIMESTAMP,
	PRIORITY_LEVEL			NUMBER,
	OWNER_USER_ID			VARCHAR(32),
	ASSIGNEE_USER_ID		VARCHAR(32),
	END_DATE			TIMESTAMP,
	TENANT_UUID			VARCHAR(32),
	CONSTRAINT PK_TICKET	PRIMARY KEY(TICKET_ID)
)
;
CREATE TABLE TICKET_USER
(
	TICKET_ID			NUMBER	NOT NULL,
	USER_ID				VARCHAR(32)	NOT NULL,
	IMS_ROLE_NAME		VARCHAR(100),
	CONSTRAINT PK_TICKET_USER	PRIMARY KEY(TICKET_ID, USER_ID)
)
;
CREATE TABLE COMMENTS
(
	COMMENT_ID			VARCHAR(32)	NOT NULL,
	TICKET_ID			NUMBER,
	COMMENT_USER_ID		VARCHAR(32),
	COMMENTS			VARCHAR(65500),
	COMMENT_TIME		TIMESTAMP,
	CONSTRAINT PK_COMMENTS	PRIMARY KEY(COMMENT_ID)
)
;
CREATE TABLE COMMENT_FILE
(
	FILE_ID			VARCHAR(32)	NOT NULL,
	COMMENT_ID			VARCHAR(32),
	FILE_NAME			VARCHAR(100),
	FILE_DATA			BLOB,
	CONSTRAINT PK_COMMENT_FILE	PRIMARY KEY(FILE_ID)
)
;
CREATE TABLE HISTORY
(
	HISTORY_ID			VARCHAR(32) NOT NULL,
	TICKET_ID			NUMBER,
	HISTORY_TIME		TIMESTAMP,
	HISTORY_SUBJECT		VARCHAR(32),
	HISTORY_ACTION		VARCHAR(32),
	HISTORY_OBJECT		VARCHAR(32),
	HISTORY_TO			VARCHAR(32),
	HISTORY_FROM			VARCHAR(32),
	CONSTRAINT PK_HISTORY	PRIMARY KEY(HISTORY_ID)
)
;
CREATE TABLE TICKET_EVENT
(
	TICKET_ID			NUMBER	NOT NULL,
	EVENT_ID			VARCHAR(32)	NOT NULL,
	CONSTRAINT PK_TICKET_EVENT	PRIMARY KEY(TICKET_ID, EVENT_ID)
)
;
CREATE TABLE SOLUTION
(
	SOLUTION_ID		VARCHAR(32)	NOT NULL,
	REGISTER_USER_ID	VARCHAR(32),
	CREATE_TIME		TIMESTAMP,
	CI_ID			VARCHAR(32),
	DESCRIPTION		VARCHAR(65500),
	CONSTRAINT PK_SOLUTION	PRIMARY KEY(SOLUTION_ID)
)
;
CREATE TABLE SOLUTION_FILE
(
	FILE_ID			VARCHAR(32)	NOT NULL,
	SOLUTION_ID			VARCHAR(32),
	FILE_NAME			VARCHAR(100),
	FILE_DATA			BLOB,
	CONSTRAINT PK_SOLUTION_FILE	PRIMARY KEY(FILE_ID)
)
;
CREATE TABLE OCCURRENCE
(
	OCCURRENCE_ID		VARCHAR(32)	NOT NULL,
	REGISTER_USER_ID	VARCHAR(32),
	CREATE_TIME		TIMESTAMP,
	CI_ID			VARCHAR(32),
	DESCRIPTION		VARCHAR(65500),
	CONSTRAINT PK_OCCURRENCE	PRIMARY KEY(OCCURRENCE_ID)
)
;
CREATE TABLE OCCURRENCE_FILE
(
	FILE_ID			VARCHAR(32)	NOT NULL,
	OCCURRENCE_ID			VARCHAR(32),
	FILE_NAME			VARCHAR(100),
	FILE_DATA			BLOB,
	CONSTRAINT PK_OCCURRENCE_FILE	PRIMARY KEY(FILE_ID)
)
;
CREATE TABLE CAUSE
(
	CAUSE_ID		VARCHAR(32)	NOT NULL,
	REGISTER_USER_ID	VARCHAR(32),
	CREATE_TIME		TIMESTAMP,
	CI_ID			VARCHAR(32),
	DESCRIPTION		VARCHAR(65500),
	CONSTRAINT PK_CAUSE	PRIMARY KEY(CAUSE_ID)
)
;
CREATE TABLE CAUSE_FILE
(
	FILE_ID			VARCHAR(32)	NOT NULL,
	CAUSE_ID			VARCHAR(32),
	FILE_NAME			VARCHAR(100),
	FILE_DATA			BLOB,
	CONSTRAINT PK_CAUSE_FILE	PRIMARY KEY(FILE_ID)
)
;
CREATE TABLE TICKET_OCCURRENCE
(
	TICKET_ID			NUMBER	NOT NULL,
	OCCURRENCE_ID			VARCHAR(32)	NOT NULL,
	CONSTRAINT PK_TICKET_OCCURRENCE	PRIMARY KEY(TICKET_ID, OCCURRENCE_ID)
)
;
CREATE TABLE OCCURRENCE_CAUSE
(
	OCCURRENCE_ID			VARCHAR(32)	NOT NULL,
	CAUSE_ID			VARCHAR(32)	NOT NULL,
	CONSTRAINT PK_OCCURRENCE_CAUSE	PRIMARY KEY(OCCURRENCE_ID, CAUSE_ID)
)
;
CREATE TABLE CAUSE_SOLUTION
(
	CAUSE_ID			VARCHAR(32)	NOT NULL,
	SOLUTION_ID			VARCHAR(32)	NOT NULL,
	CONSTRAINT PK_CAUSE_SOLUTION	PRIMARY KEY(CAUSE_ID, SOLUTION_ID)
)
;
CREATE TABLE TICKET_FILE
(
	FILE_ID			VARCHAR(32)	NOT NULL,
	TICKET_ID			NUMBER,
	FILE_NAME			VARCHAR(100),
	FILE_DATA			BLOB,
	CONSTRAINT PK_TICKET_FILE	PRIMARY KEY(FILE_ID)
)
;
CREATE SEQUENCE NEW_INCIDENT_ID INCREMENT BY 1 MINVALUE 1000 MAXVALUE 999999 NOCYCLE CACHE 20 NOORDER;

CREATE TABLE TICKET_PROJECT
(
	TICKET_ID			NUMBER,
	PROJECT_UUID			VARCHAR(32),
	PROJECT_NAME			VARCHAR(100),
	CONSTRAINT PK_TICKET_PORJECT	PRIMARY KEY(TICKET_ID, PROJECT_UUID)
)
;

alter table STEP add CONSTRAINT FK_CURRENT_STATE foreign key (CURRENT_STATE_ID) REFERENCES STATE(STATE_ID) on delete cascade;
alter table STEP add CONSTRAINT FK_NEXT_STATE foreign key (NEXT_STATE_ID) REFERENCES STATE(STATE_ID) on delete cascade;

alter table STATE_MACHINE_ROLE add CONSTRAINT FK_STATE_MACHINE_R foreign key (STATE_MACHINE_ID) REFERENCES STATE_MACHINE(STATE_MACHINE_ID) on delete cascade;

alter table STEP_ROLE add CONSTRAINT FK_STEP_R foreign key (STEP_ID) REFERENCES STEP(STEP_ID) on delete cascade;

alter table STATE_MACHINE_STEPS add CONSTRAINT FK_STATE_MACHINE_S foreign key (STATE_MACHINE_ID) REFERENCES STATE_MACHINE(STATE_MACHINE_ID) on delete cascade;
alter table STATE_MACHINE_STEPS add CONSTRAINT FK_STEP_S foreign key (STEP_ID) REFERENCES STEP(STEP_ID) on delete cascade;

alter table TICKET_TYPE add CONSTRAINT FK_STATE_MACHINE_T foreign key (STATE_MACHINE_ID) REFERENCES STATE_MACHINE(STATE_MACHINE_ID) on delete cascade;

alter table TICKET add CONSTRAINT FK_TICKET_TYPE foreign key (TICKET_TYPE_ID) REFERENCES TICKET_TYPE(TICKET_TYPE_ID) on delete cascade;
alter table TICKET add CONSTRAINT FK_STATE foreign key (STATE_ID) REFERENCES STATE(STATE_ID) on delete cascade;
alter table TICKET add CONSTRAINT FK_PRIORITY foreign key (PRIORITY_ID) REFERENCES PRIORITY(PRIORITY_ID) on delete cascade;

alter table TICKET_USER add CONSTRAINT FK_TICKET_U foreign key (TICKET_ID) REFERENCES TICKET(TICKET_ID) on delete cascade;

alter table COMMENTS add CONSTRAINT FK_TICKET_C foreign key (TICKET_ID) REFERENCES TICKET(TICKET_ID) on delete cascade;
alter table COMMENT_FILE add CONSTRAINT FK_COMMENT_F foreign key (COMMENT_ID) REFERENCES COMMENTS(COMMENT_ID) on delete cascade;

alter table HISTORY add CONSTRAINT FK_TICKET_H foreign key (TICKET_ID) REFERENCES TICKET(TICKET_ID) on delete cascade;

alter table TICKET_EVENT add CONSTRAINT FK_TICKET_E foreign key (TICKET_ID) REFERENCES TICKET(TICKET_ID) on delete cascade;
alter table TICKET_EVENT add CONSTRAINT FK_EVENT_E foreign key (EVENT_ID) REFERENCES EVENT_META(EVENT_ID) on delete cascade;

alter table SOLUTION_FILE add CONSTRAINT FK_SOLUTION_F foreign key (SOLUTION_ID) REFERENCES SOLUTION(SOLUTION_ID) on delete cascade;
alter table OCCURRENCE_FILE add CONSTRAINT FK_OCCURRENCE_F foreign key (OCCURRENCE_ID) REFERENCES OCCURRENCE(OCCURRENCE_ID) on delete cascade;
alter table CAUSE_FILE add CONSTRAINT FK_CAUSE_F foreign key (CAUSE_ID) REFERENCES CAUSE(CAUSE_ID) on delete cascade;
alter table TICKET_FILE add CONSTRAINT FK_TICKET_F foreign key (TICKET_ID) REFERENCES TICKET(TICKET_ID) on delete cascade;

alter table TICKET_OCCURRENCE add CONSTRAINT FK_TICKET_O foreign key (TICKET_ID) REFERENCES TICKET(TICKET_ID) on delete cascade;
alter table TICKET_OCCURRENCE add CONSTRAINT FK_OCCURRENCE_O foreign key (OCCURRENCE_ID) REFERENCES OCCURRENCE(OCCURRENCE_ID) on delete cascade;

alter table OCCURRENCE_CAUSE add CONSTRAINT FK_OCCURRENCE_C foreign key (OCCURRENCE_ID) REFERENCES OCCURRENCE(OCCURRENCE_ID) on delete cascade;
alter table OCCURRENCE_CAUSE add CONSTRAINT FK_CAUSE_C foreign key (CAUSE_ID) REFERENCES CAUSE(CAUSE_ID) on delete cascade;

alter table CAUSE_SOLUTION add CONSTRAINT FK_CAUSE_S foreign key (CAUSE_ID) REFERENCES CAUSE(CAUSE_ID) on delete cascade;
alter table CAUSE_SOLUTION add CONSTRAINT FK_SOLUTION_S foreign key (SOLUTION_ID) REFERENCES SOLUTION(SOLUTION_ID) on delete cascade;

alter table TICKET_PROJECT add CONSTRAINT FK_TICKET_P foreign key (TICKET_ID) REFERENCES TICKET(TICKET_ID) on delete cascade;


insert into STATE values
('7F000001BBB84D2C01415E9F00000004','Open','Start Point'),
('7F000001BBB9350601526B3000000000','In-Progress','In Progress'),
('7F000001BBB96883012FDC7100000001','Resolved','Resolved'),
('7F000001BBB98A4501A68CF900000002','Close','End Point');

insert into STEP values
('7F000001BBBCF942015F980F00000005','7F000001BBB84D2C01415E9F00000004','7F000001BBB9350601526B3000000000'),
('7F000001BBBCF94201A3FBFC00000006','7F000001BBB9350601526B3000000000','7F000001BBB96883012FDC7100000001'),
('7F000001BBBCF94201CAD59F00000007','7F000001BBB96883012FDC7100000001','7F000001BBB98A4501A68CF900000002');

insert into STATE_MACHINE values
('7F000001BBBCF942008DDBEC00000004','Default','Default');

insert into STATE_MACHINE_STEPS values
('7F000001BBBCF942008DDBEC00000004','7F000001BBBCF942015F980F00000005'),
('7F000001BBBCF942008DDBEC00000004','7F000001BBBCF94201A3FBFC00000006'),
('7F000001BBBCF942008DDBEC00000004','7F000001BBBCF94201CAD59F00000007');

insert into TICKET_TYPE values
('7F00000140A851BD014C82D500000009','Etc','7F000001BBBCF942008DDBEC00000004','Etc'),
('7F00000140A851BD014C82D500000010','Bug','7F000001BBBCF942008DDBEC00000004','Bug'),
('7F00000140A851BD014C82D500000008','Security','7F000001BBBCF942008DDBEC00000004','Security');

insert into PRIORITY values
('7F000001BBC08D3201494CEC0000000A','Very Low',1,168,'Very Low'),
('7F000001BBC0BB4D002FFC3A0000000B','Low',2,120,'Low'),
('7F000001BBC0EFEC01730F920000000C','Normal',3,72,'Normal'),
('7F000001BBC11A5A00FEE8DA0000000D','High',4,48,'High'),
('7F000001BBC14191008CAC8B0000000E','Very High',5,24,'Very High');

commit;
exit
